@Library('my-shared-library-2') _
pipeline {
    agent any

    tools {
        gradle 'Gradle' // Ensure this matches your Jenkins setup
    }

    environment {
        DOCKER_IMAGE = 'docker.io/abdallah1312/ivolve-app:latest'
        kubeconfigPath = '/home/abdallah/.kube/config'
        deploymentYaml = 'Kubernetes/deployment.yaml' // Define your Kubernetes deployment YAML path
    }

    stages {
        stage('Checkout') {
            steps {
                checkoutCode() // Call the shared library function
            }
        }
        stage('Set Permissions') {
            steps {
                setPermissions() // Call the shared library function
            }
        }
        stage('Build') {
            steps {
                build() // Call the shared library function
            }
        }
        stage('SonarQube Analysis') {
            steps {
                sonarQubeAnalysis() // Call the shared library function
            }
        }
        stage('Docker Login') {
            steps {
                dockerLogin() // Call the shared library function
            }
        }
        stage('Docker Build') {
            steps {
                dockerBuild() // Call the shared library function
            }
        }
        stage('Docker Push') {
            steps {
                dockerPush() // Call the shared library function
            }
        }
        stage('Set up Kubernetes (Kind)') {
            steps {
                setupKubernetes() // Call the shared library function
            }
        }
        stage('Deploy to Kind') {
            steps {
                deployToKind() // Call the shared library function
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        success {
            echo 'Build successful!'
        }
        failure {
            echo 'Build failed.'
        }
    }
}
