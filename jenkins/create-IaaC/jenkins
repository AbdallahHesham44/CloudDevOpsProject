@Library('your-shared-library-name') _  // Reference the shared library

pipeline {
    agent any
    environment {
        ec2_ip = ""  // Define as a global variable
    }
    stages {
        stage('Checkout Code') {
            steps {
                script {
                    checkoutCode()  // Call the checkoutCode function from shared library
                }
            }
        }

        stage('Terraform Init') {
            steps {
                script {
                    terraformInit()  // Call the terraformInit function from shared library
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                script {
                    terraformApply()  // Call the terraformApply function from shared library
                }
            }
        }

        stage('Sleep for 3 Minutes') {
            steps {
                script {
                    sleepForResources()  // Call the sleepForResources function from shared library
                }
            }
        }

        stage('Run Ansible') {
            steps {
                script {
                    runAnsible()  // Call the runAnsible function from shared library
                }
            }
        }
    }
    post {
        always {
            archiveArtifacts artifacts: 'inventory, terraform/terraform.tfstate', fingerprint: true
            cleanWs()
        }
    }
}
